from tkinter import *
import math #mathematical functions
import parser
import tkinter.messagebox

root = Tk() #name of the app is root
root.configure(background = "powder blue") #background window
root.title("Standard Calculator")
root.resizable(width = False, height = False)
root.geometry("421x448")


calc = Frame(root)
calc.grid()

class Calc():
    def __init__(self):
        self.total =0
        self.current = ""
        self.input_value = True
        self.check_sum = False
        self.op = ""
        self.result = False

    def numberEnter(self, num):
        self.result = False
        firstnum = txtDisplay.get()
        secondnum = str(num)
        if self.input_value:
            self.current = secondnum
            self.input_value = False
        else:
            if secondnum == '.':
                if secondnum in firstnum:
                    return
            self.current = firstnum + secondnum
        self.display(self.current)

    def sum_of_total(self):
        self.result = True
        self.current = float(self.current)
        if self.check_sum == True:
            self.valid_function()
        else:
            self.total = float(txtDisplay.get())

    def display(self, value):
        txtDisplay.delete(0, END)
        txtDisplay.insert(0, value) #This is what made the numbers 1-7 work"

    def valid_function(self):
        if self.op == "add":
            self.total += self.current
        if self.op == "sub":
            self.total -= self.current
        if self.op == "multi":
            self.total *= self.current
        if self.op == "divide":
            self.total /= self.current
        if self.op == "mod":
            self.total %= self.current
        self.input_value = True
        self.check_sum = False
        self.display(self.total)

    def operation(self, op):
        self.current = float(self.current)
        if self.check_sum:
            self.valid_function()
        elif not self.result:
            self.total = self.current
            self.input_value = True
        self.check_sum = True
        self.op = op
        self.result = False

    def Clear_Entry(self):
        self.result = False
        self.current = "0"
        self.display(0)
        self.input_value = True

    def all_Clear_Entry(self):
        self.Clear_Entry()
        self.total = 0

    def mathsPM(self):
        self.result = False
        self.current = -(float(txtDisplay.get()))
        self.display(self.current)

    def squared(self):
        self.result = False
        self.current = math.sqrt(float(txtDisplay.get()))
        self.display(self.current)

    def cos(self):
        self.result = False
        self.current = math.cos(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def cosh(self):
        self.result = False
        self.current = math.cosh(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def tan(self):
        self.result = False
        self.current = math.tan(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def tanh(self):
        self.result = False
        self.current = math.tanh(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def sin(self):
        self.result = False
        self.current = math.sin(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def sinh(self):
        self.result = False
        self.current = math.sinh(math.radians(float(txtDisplay.get())))
        self.display(self.current)

    def log(self):
        self.result = False
        self.current = math.log(float(txtDisplay.get()))
        self.display(self.current)

    def exp(self):
        self.result = False
        self.current = math.exp(float(txtDisplay.get()))
        self.display(self.current)

    def pi(self):
        self.result = False
        self.current = math.pi
        self.display(self.current)

    def tau(self):
        self.result = False
        self.current = math.tau
        self.display(self.current)

    def e(self):
        self.result = False
        self.current = math.e
        self.display(self.current)

    def acosh(self):
        self.result = False
        self.current = math.acosh(float(txtDisplay.get()))
        self.display(self.current)

    def asinh(self):
        self.result = False
        self.current = math.asinh(float(txtDisplay.get()))
        self.display(self.current)

    def expm1(self):
        self.result = False
        self.current = math.expm1(float(txtDisplay.get()))
        self.display(self.current)

    def lgamma(self):
        self.result = False
        self.current = math.lgamma(float(txtDisplay.get()))
        self.display(self.current)

    def degrees(self):
        self.result = False
        self.current = math.degrees(float(txtDisplay.get()))
        self.display(self.current)

    def log2(self):
        self.result = False
        self.current = math.log2(float(txtDisplay.get()))
        self.display(self.current)

    def log10(self):
        self.result = False
        self.current = math.log10(float(txtDisplay.get()))
        self.display(self.current)

    def log1p(self):
        self.result = False
        self.current = math.log1p(float(txtDisplay.get()))
        self.display(self.current)

added_value = Calc()

txtDisplay = Entry(calc, font=("arial",20,"bold"), bg="black",fg = "red", bd=22, width=25, justify=RIGHT)
txtDisplay.grid(row= 0, column =0, columnspan=4, pady=1) #this creates the display
txtDisplay.insert(0,"0")

#bg - background colour
#bd - border around the pixels

numberpad = "789456123"
i = 0
btn = []
for j in range(2,5):
    for k in range(3):
        btn.append(Button(calc, width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = "peach puff" , text = numberpad[i]))
        btn[i].grid(row = j, column = k, pady = 1)
        btn[i]["command"] = lambda x = numberpad [i]: added_value.numberEnter(x)
        i += 1

#========================================Buttons for the standard Calculator===============================================

#Clear button
btnClear = Button(calc, text = chr(67), width=10, height=3, font=("ariel",11,"bold"), bd=4,bg= 'light blue3',
command=added_value.Clear_Entry).grid(row= 1, column =0, pady=1)

#Clear Entry button
btnAllClear = Button(calc, text = chr(67) + chr(69), width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command=added_value.all_Clear_Entry).grid(row= 1, column =1, pady=1)

#Square Root button
btnSq = Button(calc, text = "√", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command=added_value.squared).grid(row= 1, column =2, pady=1)

#Add button
btnSq = Button(calc, text = "+", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.operation("add")).grid(row= 1, column =3, pady=1)

#Subtract button
btnSub = Button(calc, text = "-", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.operation("sub")).grid(row= 2, column =3, pady=1)

#Multiply button
btnSub = Button(calc, text = "*", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.operation("multi")).grid(row= 3, column =3, pady=1)

#Divide button
btnSub = Button(calc, text = "/", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.operation("divide")).grid(row= 4, column =3, pady=1)

#0 button
btnZero = Button(calc, text = "0", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.numberEnter(0)).grid(row= 5, column =0, pady=1)

#Decimal Point button
btnDot = Button(calc, text = ".",width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = lambda: added_value.numberEnter(".")).grid(row= 5, column =1, pady=1)

#PM button
btnPM = Button(calc, text = chr(177), width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = added_value.mathsPM).grid(row= 5, column =2, pady=1)

#Equal button
btnEquals = Button(calc, text = "=",width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command = added_value.sum_of_total).grid(row=5, column =3, pady=1)

#=============================================Buttons for the Scientific Calculator==========================================

#Pi button
btnPi = Button(calc, text = "π", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.pi).grid(row= 1, column =4, pady=1)

#Cos button
btnCos = Button(calc, text = "cos", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.cos).grid(row= 1, column =5, pady=1)

#Tan button
btntan = Button(calc, text = "tan", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.tan).grid(row= 1, column =6, pady=1)

#Add button
btnsin = Button(calc, text = "sin", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.sin).grid(row= 1, column =7, pady=1)

#==============================================================================================================================

#2Pi button
btnPi = Button(calc, text = "2π", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.tau).grid(row= 2, column =4, pady=1)

#Cosh button
btnCosh = Button(calc, text = "cosh", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.cosh).grid(row= 2, column =5, pady=1)

#Tan button
btntanh = Button(calc, text = "tanh", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.tanh).grid(row= 2, column =6, pady=1)

#Add button
btnsinh = Button(calc, text = "sinh", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.sinh).grid(row= 2, column =7, pady=1)

#==============================================================================================================================

#log button
btnlog = Button(calc, text = "log",width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.log).grid(row= 3, column =4, pady=1)

#Exp button
btnExp = Button(calc, text = "Exp", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.exp).grid(row= 3, column =5, pady=1)

#TMod button
btnMod= Button(calc, text = "mod", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command = lambda: added_value.operation("mod")).grid(row= 3, column =6, pady=1)

#E button
btnE = Button(calc, text = "e", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.e).grid(row= 3, column =7, pady=1)

#==============================================================================================================================

#log button
btnlog2 = Button(calc, text = "log2", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.pi).grid(row= 4, column =4, pady=1)

#deg button
btndeg = Button(calc, text = "deg", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command = added_value.degrees).grid(row= 4, column =5, pady=1)

#acosh button
btnacosh= Button(calc, text = "acosh", width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.cosh).grid(row= 4, column =6, pady=1)

#asinh button
btnasinh = Button(calc, text = "asinh",width=10, height=3, font=("ariel",11,"bold"), bd=4,bg = 'peach puff',
command =added_value.sinh).grid(row= 4, column =7, pady=1)

#==============================================================================================================================
#log10 button
btnlog10 = Button(calc, text = "log10", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.log).grid(row= 5, column =4, pady=1)

#deg button
btnlog1p = Button(calc, text = "log1p", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.cos).grid(row= 5, column =5, pady=1)

#expm1 button
btnexpml= Button(calc, text = "expm1", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.expm1).grid(row= 5, column =6, pady=1)

#gamma button
btngamma = Button(calc, text = "lgamma", width=10, height=3, font=("ariel",11,"bold"), bd=4, bg = "light blue3",
command =added_value.lgamma).grid(row= 5, column =7, pady=1)

lblDisplay = Label( calc, text ="Scientific Calculator", font = ('arial',30,'bold'),fg = "brown3", justify = CENTER)
lblDisplay.grid(row= 0, column = 4, columnspan =4)

#=============================================================================================================================

#Our functions for the menu bar: Exit, Scientific, etc.
#For Exit in the file dropdown
def iExit():
    iExit = tkinter.messagebox.askyesno("Calculator", "Are you sure you want to exit?")
    if iExit > 0:
        root.destroy()
    return

def Scientific():
    root.resizable(width = False, height = False)
    root.geometry("837x448")

def Standard():
    root.resizable(width = False, height = False)
    root.geometry("421x448")

#How to create a menu bar
menubar =Menu(calc)

filemenu = Menu(menubar, tearoff = 0)
menubar.add_cascade(label = "File", menu=filemenu)
filemenu.add_command(label = "Standard", command = Standard)
filemenu.add_command(label = "Scientific", command = Scientific)
filemenu.add_separator()
filemenu.add_command(label = "Exit",command = iExit)

editmenu = Menu(menubar, tearoff = 0)
menubar.add_cascade(label = "Edit", menu=editmenu)
editmenu.add_command(label = "Cut")
editmenu.add_command(label = "Copy")
editmenu.add_separator()
editmenu.add_command(label = "Paste")

helpmenu = Menu(menubar, tearoff = 0)
menubar.add_cascade(label = "Help", menu=helpmenu)
helpmenu.add_command(label = "View Help")

root.config(menu = menubar)
root.mainloop()
